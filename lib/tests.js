// Generated by CoffeeScript 1.10.0
(function() {
  var CND, NCR, alert, badge, debug, echo, help, hex, include, info, log, rpr, test, urge, warn, whisper,
    indexOf = [].indexOf || function(item) { for (var i = 0, l = this.length; i < l; i++) { if (i in this && this[i] === item) return i; } return -1; };

  CND = require('cnd');

  rpr = CND.rpr;

  badge = 'NCR/tests';

  log = CND.get_logger('plain', badge);

  info = CND.get_logger('info', badge);

  whisper = CND.get_logger('whisper', badge);

  alert = CND.get_logger('alert', badge);

  debug = CND.get_logger('debug', badge);

  warn = CND.get_logger('warn', badge);

  help = CND.get_logger('help', badge);

  urge = CND.get_logger('urge', badge);

  echo = CND.echo.bind(CND);

  test = require('guy-test');

  NCR = require('./main');

  this._prune = function() {
    var name, value;
    for (name in this) {
      value = this[name];
      if (name.startsWith('_')) {
        continue;
      }
      if (indexOf.call(include, name) < 0) {
        delete this[name];
      }
    }
    return null;
  };

  this._main = function() {
    return test(this, {
      'timeout': 3000
    });
  };

  hex = function(n) {
    return '0x' + n.toString(16);
  };

  this['test # 1'] = function(T) {
    return T.eq(('&#123;helo'.match(NCR._first_chr_matcher_ncr)).slice(1, 4), ['', void 0, '123']);
  };

  this['test # 2'] = function(T) {
    return T.eq(('&#x123;helo'.match(NCR._first_chr_matcher_ncr)).slice(1, 4), ['', '123', void 0]);
  };

  this['test # 3'] = function(T) {
    return T.eq(('&#x123;helo'.match(NCR._first_chr_matcher_xncr)).slice(1, 4), ['', '123', void 0]);
  };

  this['test # 4'] = function(T) {
    return T.eq(('&jzr#123;helo'.match(NCR._first_chr_matcher_xncr)).slice(1, 4), ['jzr', void 0, '123']);
  };

  this['test # 5'] = function(T) {
    return T.eq(('&jzr#x123;helo'.match(NCR._first_chr_matcher_xncr)).slice(1, 4), ['jzr', '123', void 0]);
  };

  this['test # 6'] = function(T) {
    return T.eq(('𤕣'[0] + 'x').match(NCR._first_chr_matcher_plain), null);
  };

  this['test # 7'] = function(T) {
    return T.eq(NCR._chr_csg_cid_from_chr('&#97;abc', 'ncr'), ['&#97;', 'u', 97]);
  };

  this['test # 8'] = function(T) {
    return T.eq(NCR._chr_csg_cid_from_chr('&#97;abc', 'plain'), ['&', 'u', 38]);
  };

  this['test # 9'] = function(T) {
    return T.eq(NCR._chr_csg_cid_from_chr('&#97;abc', 'xncr'), ['&#97;', 'u', 97]);
  };

  this['test # 10'] = function(T) {
    return T.eq(NCR._chr_csg_cid_from_chr('&#x61;abc'), ['&', 'u', 38]);
  };

  this['test # 11'] = function(T) {
    return T.eq(NCR._chr_csg_cid_from_chr('&#x61;abc', 'ncr'), ['&#x61;', 'u', 97]);
  };

  this['test # 12'] = function(T) {
    return T.eq(NCR._chr_csg_cid_from_chr('&#x61;abc', 'plain'), ['&', 'u', 38]);
  };

  this['test # 13'] = function(T) {
    return T.eq(NCR._chr_csg_cid_from_chr('&#x61;abc', 'xncr'), ['&#x61;', 'u', 97]);
  };

  this['test # 14'] = function(T) {
    return T.eq(NCR._chr_csg_cid_from_chr('abc', 'ncr'), ['a', 'u', 97]);
  };

  this['test # 15'] = function(T) {
    return T.eq(NCR._chr_csg_cid_from_chr('abc', 'plain'), ['a', 'u', 97]);
  };

  this['test # 16'] = function(T) {
    return T.eq(NCR._chr_csg_cid_from_chr('abc', 'xncr'), ['a', 'u', 97]);
  };

  this['test # 17'] = function(T) {
    return T.eq(NCR.analyze('&#x24563;'), {
      '~isa': 'NCR/info',
      "uchr": "&",
      "chr": "&",
      "csg": "u",
      "cid": 38,
      "fncr": "u-latn-26",
      "sfncr": "u-26",
      "ncr": "&#x26;",
      "xncr": "&#x26;",
      "rsg": "u-latn"
    });
  };

  this['test # 18'] = function(T) {
    return T.eq(NCR.analyze('&#x24563;', {
      input: 'ncr'
    }), {
      '~isa': 'NCR/info',
      "uchr": "𤕣",
      "chr": "𤕣",
      "csg": "u",
      "cid": 148835,
      "fncr": "u-cjk-xb-24563",
      "sfncr": "u-24563",
      "ncr": "&#x24563;",
      "xncr": "&#x24563;",
      "rsg": "u-cjk-xb"
    });
  };

  this['test # 19'] = function(T) {
    return T.eq(NCR.analyze('&#x24563;', {
      input: 'xncr'
    }), {
      '~isa': 'NCR/info',
      "uchr": "𤕣",
      "chr": "𤕣",
      "csg": "u",
      "cid": 148835,
      "fncr": "u-cjk-xb-24563",
      "sfncr": "u-24563",
      "ncr": "&#x24563;",
      "xncr": "&#x24563;",
      "rsg": "u-cjk-xb"
    });
  };

  this['test # 20'] = function(T) {
    return T.eq(NCR.analyze('&jzr#x24563;'), {
      '~isa': 'NCR/info',
      "uchr": "&",
      "chr": "&",
      "csg": "u",
      "cid": 38,
      "fncr": "u-latn-26",
      "sfncr": "u-26",
      "ncr": "&#x26;",
      "xncr": "&#x26;",
      "rsg": "u-latn"
    });
  };

  this['test # 21'] = function(T) {
    return T.eq(NCR.analyze('&jzr#x24563;', {
      input: 'ncr'
    }), {
      '~isa': 'NCR/info',
      "uchr": "&",
      "chr": "&",
      "csg": "u",
      "cid": 38,
      "fncr": "u-latn-26",
      "sfncr": "u-26",
      "ncr": "&#x26;",
      "xncr": "&#x26;",
      "rsg": "u-latn"
    });
  };

  this['test # 22'] = function(T) {
    return T.eq(NCR.analyze('&jzr#x24563;', {
      input: 'xncr'
    }), {
      '~isa': 'NCR/info',
      "uchr": "𤕣",
      "chr": "&jzr#x24563;",
      "csg": "jzr",
      "cid": 148835,
      "fncr": "jzr-24563",
      "sfncr": "jzr-24563",
      "ncr": "&#x24563;",
      "xncr": "&jzr#x24563;",
      "rsg": null
    });
  };

  this['test # 22a'] = function(T) {
    debug('©BY7x6', JSON.stringify(NCR.analyze('&jzr#xe101;', {
      input: 'xncr'
    })));
    return T.eq(NCR.analyze('&jzr#xe101;', {
      input: 'xncr'
    }), {
      "~isa": "NCR/info",
      "chr": "&jzr#xe101;",
      "uchr": "",
      "csg": "jzr",
      "cid": 57601,
      "fncr": "jzr-fig-e101",
      "sfncr": "jzr-e101",
      "ncr": "&#xe101;",
      "xncr": "&jzr#xe101;",
      "rsg": "jzr-fig"
    });
  };

  this['test # 22b'] = function(T) {
    return T.eq(NCR.analyze('&jzr#e101;', {
      input: 'xncr'
    }), {
      "~isa": "NCR/info",
      "chr": "&",
      "uchr": "&",
      "csg": "u",
      "cid": 38,
      "fncr": "u-latn-26",
      "sfncr": "u-26",
      "ncr": "&#x26;",
      "xncr": "&#x26;",
      "rsg": "u-latn"
    });
  };

  this['test # 23'] = function(T) {
    return T.eq(NCR.analyze('helo world'), {
      '~isa': 'NCR/info',
      "uchr": "h",
      "chr": "h",
      "csg": "u",
      "cid": 104,
      "fncr": "u-latn-68",
      "sfncr": "u-68",
      "ncr": "&#x68;",
      "xncr": "&#x68;",
      "rsg": "u-latn"
    });
  };

  this['test # 24'] = function(T) {
    return T.eq(NCR.chrs_from_text(''), []);
  };

  this['test # 25'] = function(T) {
    return T.eq(NCR.chrs_from_text('', {
      input: 'ncr'
    }), []);
  };

  this['test # 26'] = function(T) {
    return T.eq(NCR.chrs_from_text('', {
      input: 'xncr'
    }), []);
  };

  this['test # 27'] = function(T) {
    return T.eq(NCR.chrs_from_text('abc'), ['a', 'b', 'c']);
  };

  this['test # 28'] = function(T) {
    return T.eq(NCR.chrs_from_text('abc', {
      input: 'ncr'
    }), ['a', 'b', 'c']);
  };

  this['test # 29'] = function(T) {
    return T.eq(NCR.chrs_from_text('abc', {
      input: 'xncr'
    }), ['a', 'b', 'c']);
  };

  this['test # 30'] = function(T) {
    return T.eq(NCR.chrs_from_text('𤕣a&#123;b𤕣c'), ['𤕣', 'a', '&', '#', '1', '2', '3', ';', 'b', '𤕣', 'c']);
  };

  this['test # 31'] = function(T) {
    return T.eq(NCR.chrs_from_text('𤕣a&#123;b𤕣c', {
      input: 'ncr'
    }), ['𤕣', 'a', '&#123;', 'b', '𤕣', 'c']);
  };

  this['test # 32'] = function(T) {
    return T.eq(NCR.chrs_from_text('𤕣a&#123;b𤕣c', {
      input: 'xncr'
    }), ['𤕣', 'a', '&#123;', 'b', '𤕣', 'c']);
  };

  this['test # 33'] = function(T) {
    return T.eq(NCR.chrs_from_text('𤕣a&#x123ab;b𤕣c'), ['𤕣', 'a', '&', '#', 'x', '1', '2', '3', 'a', 'b', ';', 'b', '𤕣', 'c']);
  };

  this['test # 34'] = function(T) {
    return T.eq(NCR.chrs_from_text('𤕣a&#x123ab;b𤕣c', {
      input: 'ncr'
    }), ['𤕣', 'a', '&#x123ab;', 'b', '𤕣', 'c']);
  };

  this['test # 35'] = function(T) {
    return T.eq(NCR.chrs_from_text('𤕣a&#x123ab;b𤕣c', {
      input: 'xncr'
    }), ['𤕣', 'a', '&#x123ab;', 'b', '𤕣', 'c']);
  };

  this['test # 36'] = function(T) {
    return T.eq(NCR.chrs_from_text('𤕣a&jzr#123;b𤕣c'), ['𤕣', 'a', '&', 'j', 'z', 'r', '#', '1', '2', '3', ';', 'b', '𤕣', 'c']);
  };

  this['test # 37'] = function(T) {
    return T.eq(NCR.chrs_from_text('𤕣a&jzr#x123ab;b𤕣c'), ['𤕣', 'a', '&', 'j', 'z', 'r', '#', 'x', '1', '2', '3', 'a', 'b', ';', 'b', '𤕣', 'c']);
  };

  this['test # 38'] = function(T) {
    return T.eq(NCR.chrs_from_text('𤕣a&jzr#x123ab;b𤕣c', {
      input: 'ncr'
    }), ['𤕣', 'a', '&', 'j', 'z', 'r', '#', 'x', '1', '2', '3', 'a', 'b', ';', 'b', '𤕣', 'c']);
  };

  this['test # 39'] = function(T) {
    return T.eq(NCR.chrs_from_text('𤕣a&jzr#x123ab;b𤕣c', {
      input: 'xncr'
    }), ['𤕣', 'a', '&jzr#x123ab;', 'b', '𤕣', 'c']);
  };

  this['test # 40'] = function(T) {
    return T.eq(NCR.chrs_from_text('𤕣abc'), ['𤕣', 'a', 'b', 'c']);
  };

  this['test # 41'] = function(T) {
    return T.eq(NCR.chrs_from_text('𤕣abc', {
      input: 'ncr'
    }), ['𤕣', 'a', 'b', 'c']);
  };

  this['test # 42'] = function(T) {
    return T.eq(NCR.chrs_from_text('𤕣abc', {
      input: 'xncr'
    }), ['𤕣', 'a', 'b', 'c']);
  };

  this['test # 43'] = function(T) {
    return T.eq(NCR.chrs_from_text('𤕣ab𤕣c'), ['𤕣', 'a', 'b', '𤕣', 'c']);
  };

  this['test # 44'] = function(T) {
    return T.eq(NCR.chrs_from_text('𤕣ab𤕣c', {
      input: 'ncr'
    }), ['𤕣', 'a', 'b', '𤕣', 'c']);
  };

  this['test # 45'] = function(T) {
    return T.eq(NCR.chrs_from_text('𤕣ab𤕣c', {
      input: 'xncr'
    }), ['𤕣', 'a', 'b', '𤕣', 'c']);
  };

  this['test # 46'] = function(T) {
    return T.eq(NCR.chunks_from_text('1 < 2', {
      output: 'html'
    }), [
      {
        "~isa": "NCR/chunk",
        "csg": "u",
        "rsg": "u-latn",
        "text": "1 &lt; 2"
      }
    ]);
  };

  this['test # 47'] = function(T) {
    return T.eq(NCR.chunks_from_text('2 > 1', {
      output: 'html'
    }), [
      {
        "~isa": "NCR/chunk",
        "csg": "u",
        "rsg": "u-latn",
        "text": "2 &gt; 1"
      }
    ]);
  };

  this['test # 48'] = function(T) {
    return T.eq(NCR.chunks_from_text('ab&#x63;d'), [
      {
        "~isa": "NCR/chunk",
        "csg": "u",
        "rsg": "u-latn",
        "text": "ab&#x63;d"
      }
    ]);
  };

  this['test # 49'] = function(T) {
    return T.eq(NCR.chunks_from_text('ab&#x63;d', {
      input: 'ncr'
    }), [
      {
        "~isa": "NCR/chunk",
        "csg": "u",
        "rsg": "u-latn",
        "text": "abcd"
      }
    ]);
  };

  this['test # 50'] = function(T) {
    return T.eq(NCR.chunks_from_text('ab&#x63;d', {
      input: 'xncr'
    }), [
      {
        "~isa": "NCR/chunk",
        "csg": "u",
        "rsg": "u-latn",
        "text": "abcd"
      }
    ]);
  };

  this['test # 51'] = function(T) {
    return T.eq(NCR.chunks_from_text('ab&jzr#xe063;d'), [
      {
        "~isa": "NCR/chunk",
        "csg": "u",
        "rsg": "u-latn",
        "text": "ab&jzr#xe063;d"
      }
    ]);
  };

  this['test # 52'] = function(T) {
    return T.eq(NCR.chunks_from_text('ab&jzr#xe063;d', {
      input: 'ncr'
    }), [
      {
        "~isa": "NCR/chunk",
        "csg": "u",
        "rsg": "u-latn",
        "text": "ab&jzr#xe063;d"
      }
    ]);
  };

  this['test # 53'] = function(T) {
    return T.eq(NCR.chunks_from_text('ab&jzr#xe063;d', {
      input: 'xncr'
    }), [
      {
        "~isa": "NCR/chunk",
        "csg": "u",
        "rsg": "u-latn",
        "text": "ab"
      }, {
        "~isa": "NCR/chunk",
        "csg": "jzr",
        "rsg": "jzr-fig",
        "text": "&#xe063;"
      }, {
        "~isa": "NCR/chunk",
        "csg": "u",
        "rsg": "u-latn",
        "text": "d"
      }
    ]);
  };

  this['test # 54'] = function(T) {
    return T.eq(NCR.chunks_from_text('ab&jzr#xe063;d', {
      input: 'xncr',
      output: 'html'
    }), [
      {
        "~isa": "NCR/chunk",
        "csg": "u",
        "rsg": "u-latn",
        "text": "ab"
      }, {
        "~isa": "NCR/chunk",
        "csg": "jzr",
        "rsg": "jzr-fig",
        "text": "&#xe063;"
      }, {
        "~isa": "NCR/chunk",
        "csg": "u",
        "rsg": "u-latn",
        "text": "d"
      }
    ]);
  };

  this['test # 55'] = function(T) {
    return T.eq(NCR.chunks_from_text('helo wörld'), [
      {
        "~isa": "NCR/chunk",
        "csg": "u",
        "rsg": "u-latn",
        "text": "helo w"
      }, {
        "~isa": "NCR/chunk",
        "csg": "u",
        "rsg": "u-latn-1",
        "text": "ö"
      }, {
        "~isa": "NCR/chunk",
        "csg": "u",
        "rsg": "u-latn",
        "text": "rld"
      }
    ]);
  };

  this['test # 56'] = function(T) {
    return T.eq(NCR.chunks_from_text('helo wörld', {
      output: 'html'
    }), [
      {
        "~isa": "NCR/chunk",
        "csg": "u",
        "rsg": "u-latn",
        "text": "helo w"
      }, {
        "~isa": "NCR/chunk",
        "csg": "u",
        "rsg": "u-latn-1",
        "text": "ö"
      }, {
        "~isa": "NCR/chunk",
        "csg": "u",
        "rsg": "u-latn",
        "text": "rld"
      }
    ]);
  };

  this['test # 57'] = function(T) {
    return T.eq(NCR.chunks_from_text('me & you', {
      output: 'html'
    }), [
      {
        "~isa": "NCR/chunk",
        "csg": "u",
        "rsg": "u-latn",
        "text": "me &amp; you"
      }
    ]);
  };

  this['test # 58'] = function(T) {
    return T.eq(NCR.chunks_from_text('me &amp; you', {
      output: 'html'
    }), [
      {
        "~isa": "NCR/chunk",
        "csg": "u",
        "rsg": "u-latn",
        "text": "me &amp;amp; you"
      }
    ]);
  };

  this['test # 59'] = function(T) {
    return T.eq(NCR.chunks_from_text('種果〇𤕣カタカナ'), [
      {
        "~isa": "NCR/chunk",
        "csg": "u",
        "rsg": "u-cjk",
        "text": "種果"
      }, {
        "~isa": "NCR/chunk",
        "csg": "u",
        "rsg": "u-cjk-sym",
        "text": "〇"
      }, {
        "~isa": "NCR/chunk",
        "csg": "u",
        "rsg": "u-cjk-xb",
        "text": "𤕣"
      }, {
        "~isa": "NCR/chunk",
        "csg": "u",
        "rsg": "u-cjk-kata",
        "text": "カタカナ"
      }
    ]);
  };

  this['test # 60'] = function(T) {
    return T.eq(NCR.csg_cid_from_chr('&#x24563;'), ['u', 38]);
  };

  this['test # 61'] = function(T) {
    return T.eq(NCR.csg_cid_from_chr('&#x24563;', {
      input: 'ncr'
    }), ['u', 148835]);
  };

  this['test # 62'] = function(T) {
    return T.eq(NCR.csg_cid_from_chr('&#x24563;', {
      input: 'plain'
    }), ['u', 38]);
  };

  this['test # 63'] = function(T) {
    return T.eq(NCR.csg_cid_from_chr('&#x24563;', {
      input: 'xncr'
    }), ['u', 148835]);
  };

  this['test # 64'] = function(T) {
    return T.eq(NCR.csg_cid_from_chr('𤕣'), ['u', 148835]);
  };

  this['test # 65'] = function(T) {
    return T.eq(NCR.csg_cid_from_chr('𤕣', {
      input: 'ncr'
    }), ['u', 148835]);
  };

  this['test # 66'] = function(T) {
    return T.eq(NCR.csg_cid_from_chr('𤕣', {
      input: 'plain'
    }), ['u', 148835]);
  };

  this['test # 67'] = function(T) {
    return T.eq(NCR.csg_cid_from_chr('𤕣', {
      input: 'xncr'
    }), ['u', 148835]);
  };

  this['test # 68'] = function(T) {
    return T.eq(NCR._as_sfncr('jzr', 0x12abc), 'jzr-12abc');
  };

  this['test # 69'] = function(T) {
    return T.eq(NCR._as_sfncr('u', 0x12abc), 'u-12abc');
  };

  this['test # 70'] = function(T) {
    return T.eq(NCR._as_xncr('jzr', 0x12abc), '&jzr#x12abc;');
  };

  this['test # 71'] = function(T) {
    return T.eq(NCR._as_xncr('u', 0x12abc), '&#x12abc;');
  };

  this['test # 72'] = function(T) {
    return T.eq(NCR._as_xncr('u', 0x12abc), '&#x12abc;');
  };

  this['test # 73'] = function(T) {
    return T.eq(NCR.as_cid('&jzr#xe100;', {
      input: 'xncr',
      csg: 'u'
    }), 0xe100);
  };

  this['test # 74'] = function(T) {
    return T.eq(NCR.as_cid('&jzr#xe100;', {
      input: 'xncr'
    }), 0xe100);
  };

  this['test # 75'] = function(T) {
    return T.eq(NCR.as_cid('𤕣', {
      input: 'xncr'
    }), 0x24563);
  };

  this['test # 76'] = function(T) {
    return T.eq(NCR.as_csg('&jzr#xe100;', {
      input: 'xncr',
      csg: 'u'
    }), 'u');
  };

  this['test # 77'] = function(T) {
    return T.eq(NCR.as_csg('&jzr#xe100;', {
      input: 'xncr'
    }), 'jzr');
  };

  this['test # 78'] = function(T) {
    return T.eq(NCR.as_csg('𤕣', {
      input: 'xncr'
    }), 'u');
  };

  this['test # 79'] = function(T) {
    return T.eq(NCR.as_fncr('&#x1;', {
      input: 'xncr',
      csg: 'jzr'
    }), 'jzr-1');
  };

  this['test # 80'] = function(T) {
    return T.eq(NCR.as_fncr('&#xe123;', {
      input: 'xncr',
      csg: 'jzr'
    }), 'jzr-fig-e123');
  };

  this['test # 81'] = function(T) {
    return T.eq(NCR.as_fncr('𤕣', {
      input: 'xncr'
    }), 'u-cjk-xb-24563');
  };

  this['test # 82'] = function(T) {
    return T.eq(NCR.as_ncr(0x12abc), '&#x12abc;');
  };

  this['test # 83'] = function(T) {
    return T.eq(NCR.as_range_name('&#xe100;', {
      input: 'ncr'
    }), 'Private Use Area');
  };

  this['test # 84'] = function(T) {
    return T.eq(NCR.as_range_name('&#xe100;', {
      input: 'plain'
    }), 'Basic Latin');
  };

  this['test # 85'] = function(T) {
    return T.eq(NCR.as_range_name('&#xe100;', {
      input: 'xncr'
    }), 'Private Use Area');
  };

  this['test # 86'] = function(T) {
    return T.eq(NCR.as_range_name('&jzr#xe100;', {
      input: 'ncr'
    }), 'Basic Latin');
  };

  this['test # 87'] = function(T) {
    return T.eq(NCR.as_range_name('&jzr#xe100;', {
      input: 'plain'
    }), 'Basic Latin');
  };

  this['test # 88'] = function(T) {
    return T.eq(NCR.as_range_name('&jzr#xe100;', {
      input: 'xncr'
    }), 'Jizura Character Components');
  };

  this['test # 89'] = function(T) {
    return T.eq(NCR.as_range_name('a'), 'Basic Latin');
  };

  this['test # 90'] = function(T) {
    return T.eq(NCR.as_range_name('𤕣'), 'CJK Unified Ideographs Extension B');
  };

  this['test # 91'] = function(T) {
    return T.eq(NCR.as_rsg('&#xe100;', {
      input: 'ncr'
    }), 'u-pua');
  };

  this['test # 92'] = function(T) {
    return T.eq(NCR.as_rsg('&#xe100;', {
      input: 'plain'
    }), 'u-latn');
  };

  this['test # 93'] = function(T) {
    return T.eq(NCR.as_rsg('&#xe100;', {
      input: 'xncr'
    }), 'u-pua');
  };

  this['test # 94'] = function(T) {
    return T.eq(NCR.as_rsg('&jzr#xe100;', {
      input: 'ncr'
    }), 'u-latn');
  };

  this['test # 95'] = function(T) {
    return T.eq(NCR.as_rsg('&jzr#xe100;', {
      input: 'plain'
    }), 'u-latn');
  };

  this['test # 96'] = function(T) {
    return T.eq(NCR.as_rsg('&jzr#xe100;', {
      input: 'xncr'
    }), 'jzr-fig');
  };

  this['test # 97'] = function(T) {
    return T.eq(NCR.as_rsg('&#x1;', {
      input: 'xncr',
      csg: 'jzr'
    }), null);
  };

  this['test # 98'] = function(T) {
    return T.eq(NCR.as_rsg('&#xe100;', {
      input: 'xncr',
      csg: 'jzr'
    }), 'jzr-fig');
  };

  this['test # 99'] = function(T) {
    return T.eq(NCR.as_rsg('&#xe100;', {
      input: 'xncr',
      csg: 'u'
    }), 'u-pua');
  };

  this['test # 100'] = function(T) {
    return T.eq(NCR.as_rsg('&jzr#xe100;', {
      input: 'xncr',
      csg: 'u'
    }), 'u-pua');
  };

  this['test # 101'] = function(T) {
    return T.eq(NCR.as_rsg('a'), 'u-latn');
  };

  this['test # 102'] = function(T) {
    return T.eq(NCR.as_rsg('𤕣'), 'u-cjk-xb');
  };

  this['test # 103'] = function(T) {
    return T.eq(NCR.as_sfncr('a'), 'u-61');
  };

  this['test # 104'] = function(T) {
    return T.eq(NCR.cid_from_chr('&#678;'), 38);
  };

  this['test # 105'] = function(T) {
    return T.eq(NCR.cid_from_chr('&#678;', {
      input: 'ncr'
    }), 678);
  };

  this['test # 106'] = function(T) {
    return T.eq(NCR.cid_from_chr('&#678;', {
      input: 'xncr'
    }), 678);
  };

  this['test # 107'] = function(T) {
    return T.eq(NCR.cid_from_chr('&#x678;'), 38);
  };

  this['test # 108'] = function(T) {
    return T.eq(NCR.cid_from_chr('&#x678;', {
      input: 'ncr'
    }), 0x678);
  };

  this['test # 109'] = function(T) {
    return T.eq(NCR.cid_from_chr('&#x678;', {
      input: 'xncr'
    }), 0x678);
  };

  this['test # 110'] = function(T) {
    return T.eq(NCR.cid_from_chr('&jzr#678;'), 38);
  };

  this['test # 111'] = function(T) {
    return T.eq(NCR.cid_from_chr('&jzr#678;', {
      input: 'ncr'
    }), 38);
  };

  this['test # 112'] = function(T) {
    return T.eq(NCR.cid_from_chr('&jzr#678;', {
      input: 'xncr'
    }), 678);
  };

  this['test # 113'] = function(T) {
    return T.eq(NCR.cid_from_chr('&jzr#x678;'), 38);
  };

  this['test # 114'] = function(T) {
    return T.eq(NCR.cid_from_chr('&jzr#x678;', {
      input: 'ncr'
    }), 38);
  };

  this['test # 115'] = function(T) {
    return T.eq(NCR.cid_from_chr('&jzr#x678;', {
      input: 'xncr'
    }), 0x678);
  };

  this['test # 116'] = function(T) {
    return T.eq(NCR.cid_from_chr('a'), 97);
  };

  this['test # 117'] = function(T) {
    return T.eq(NCR.cid_from_chr('a', {
      input: 'ncr'
    }), 97);
  };

  this['test # 118'] = function(T) {
    return T.eq(NCR.cid_from_chr('a', {
      input: 'xncr'
    }), 97);
  };

  this['test # 119'] = function(T) {
    return T.eq(NCR.cid_from_chr('x'), 120);
  };

  this['test # 120'] = function(T) {
    return T.eq(NCR.cid_from_chr('x', {
      input: 'ncr'
    }), 120);
  };

  this['test # 121'] = function(T) {
    return T.eq(NCR.cid_from_chr('x', {
      input: 'xncr'
    }), 120);
  };

  this['test # 122'] = function(T) {
    return T.eq(NCR.html_from_text('&jzr#xe101; & you', {
      input: 'xncr'
    }), "<span class=\"jzr-fig\">&#xe101;</span><span class=\"u-latn\"> &amp; you</span>");
  };

  this['test # 123'] = function(T) {
    return T.eq(NCR.html_from_text('helo &#x24563; wörld'), "<span class=\"u-latn\">helo &amp;#x24563; w</span><span class=\"u-latn-1\">ö</span><span class=\"u-latn\">rld</span>");
  };

  this['test # 124'] = function(T) {
    return T.eq(NCR.html_from_text('helo &#x24563; wörld', {
      input: 'xncr'
    }), "<span class=\"u-latn\">helo </span><span class=\"u-cjk-xb\">𤕣</span><span class=\"u-latn\"> w</span><span class=\"u-latn-1\">ö</span><span class=\"u-latn\">rld</span>");
  };

  this['test # 125'] = function(T) {
    return T.eq(NCR.html_from_text('helo wörld'), "<span class=\"u-latn\">helo w</span><span class=\"u-latn-1\">ö</span><span class=\"u-latn\">rld</span>");
  };

  this['test Unicode 8 / CJK Extension E'] = function(T) {
    T.eq(NCR.as_csg('𫠠'), 'u');
    T.eq(NCR.as_rsg('𫠠'), 'u-cjk-xe');
    return T.eq(NCR.as_fncr('𫠠'), 'u-cjk-xe-2b820');
  };

  this['test # 200'] = function(T) {
    var XNCR;
    XNCR = Object.assign({}, NCR, {
      _input_default: 'xncr'
    });
    XNCR._names_and_ranges_by_csg['foo'] = [['(Glyphs)', 'foo', 0x0000, 0xffffffff]];
    T.eq(NCR.analyze('&foo#x24563;'), {
      "~isa": "NCR/info",
      "chr": "&",
      "uchr": "&",
      "csg": "u",
      "cid": 38,
      "fncr": "u-latn-26",
      "sfncr": "u-26",
      "ncr": "&#x26;",
      "xncr": "&#x26;",
      "rsg": "u-latn"
    });
    T.eq(XNCR.analyze('&foo#x24563;'), {
      "~isa": "NCR/info",
      "chr": "&foo#x24563;",
      "uchr": "𤕣",
      "csg": "foo",
      "cid": 148835,
      "fncr": "foo-24563",
      "sfncr": "foo-24563",
      "ncr": "&#x24563;",
      "xncr": "&foo#x24563;",
      "rsg": null
    });
    T.eq(NCR.html_from_text('abc&foo#x24563;xyzäöü丁三夫國形丁三夫國形丁三夫國形𫠠𧑴𨒡'), "<span class=\"u-latn\">abc&amp;foo#x24563;xyz</span><span class=\"u-latn-1\">äöü</span><span class=\"u-cjk\">丁三夫國形丁三夫國形丁三夫國形</span><span class=\"u-cjk-xe\">𫠠</span><span class=\"u-cjk-xb\">𧑴𨒡</span>");
    return T.eq(XNCR.html_from_text('abc&foo#x24563;xyzäöü丁三夫國形丁三夫國形丁三夫國形𫠠𧑴𨒡'), "<span class=\"u-latn\">abc</span><span class=\"foo\">&#x24563;</span><span class=\"u-latn\">xyz</span><span class=\"u-latn-1\">äöü</span><span class=\"u-cjk\">丁三夫國形丁三夫國形丁三夫國形</span><span class=\"u-cjk-xe\">𫠠</span><span class=\"u-cjk-xb\">𧑴𨒡</span>");
  };

  this['test # 201'] = function(T) {

    /* TAINT poor man's deep copy: */
    var XNCR;
    XNCR = Object.assign({}, NCR);
    XNCR._names_and_ranges_by_csg = Object.assign({}, XNCR._names_and_ranges_by_csg);
    XNCR._input_default = 'xncr';
    XNCR._names_and_ranges_by_csg['foo'] = [['(Glyphs)', 'foo', 0x0000, 0xffffffff]];
    T.eq(XNCR._names_and_ranges_by_csg === NCR._names_and_ranges_by_csg, false);
    T.eq(NCR.analyze('&foo#x24563;'), {
      "~isa": "NCR/info",
      "chr": "&",
      "uchr": "&",
      "csg": "u",
      "cid": 38,
      "fncr": "u-latn-26",
      "sfncr": "u-26",
      "ncr": "&#x26;",
      "xncr": "&#x26;",
      "rsg": "u-latn"
    });
    T.eq(XNCR.analyze('&foo#x24563;'), {
      "~isa": "NCR/info",
      "chr": "&foo#x24563;",
      "uchr": "𤕣",
      "csg": "foo",
      "cid": 148835,
      "fncr": "foo-24563",
      "sfncr": "foo-24563",
      "ncr": "&#x24563;",
      "xncr": "&foo#x24563;",
      "rsg": null
    });
    T.eq(NCR.html_from_text('abc&foo#x24563;xyzäöü丁三夫國形丁三夫國形丁三夫國形𫠠𧑴𨒡'), "<span class=\"u-latn\">abc&amp;foo#x24563;xyz</span><span class=\"u-latn-1\">äöü</span><span class=\"u-cjk\">丁三夫國形丁三夫國形丁三夫國形</span><span class=\"u-cjk-xe\">𫠠</span><span class=\"u-cjk-xb\">𧑴𨒡</span>");
    return T.eq(XNCR.html_from_text('abc&foo#x24563;xyzäöü丁三夫國形丁三夫國形丁三夫國形𫠠𧑴𨒡'), "<span class=\"u-latn\">abc</span><span class=\"foo\">&#x24563;</span><span class=\"u-latn\">xyz</span><span class=\"u-latn-1\">äöü</span><span class=\"u-cjk\">丁三夫國形丁三夫國形丁三夫國形</span><span class=\"u-cjk-xe\">𫠠</span><span class=\"u-cjk-xb\">𧑴𨒡</span>");
  };


  /*
    'so|glyph:劬|cp/fncr:u-cjk/52ac|0'
    'so|glyph:邭|cp/fncr:u-cjk/90ad|0'
    'so|glyph:𠴦|cp/fncr:u-cjk-xb/20d26|0'
    'so|glyph:𤿯|cp/fncr:u-cjk-xb/24fef|0'
    'so|glyph:𧑴|cp/fncr:u-cjk-xb/27474|0'
    'so|glyph:𨒡|cp/fncr:u-cjk-xb/284a1|0'
    'so|glyph:𪚧|cp/fncr:u-cjk-xb/2a6a7|0'
    'so|glyph:𪚫|cp/fncr:u-cjk-xb/2a6ab|0'
    '丁三夫國形丁三夫國形丁三夫國形'
   */

  this["Unicode demo"] = function(T) {
    var ISL, XNCR, _, add_plane, cid, cid_hex, cjk_rsgs, csg, description, descriptions, glyph, hi, i, intervals_by_rsg, is_cjk, is_cjk_glyph, is_cjk_rsg, j, k, key, l, last_cid, len, len1, len2, len3, len4, line, lo, m, mkts_options, name, range, ranges, ref, ref1, ref2, ref3, ref4, ref5, ref6, ref7, ref8, rsg, rsg_registry, source, style, tex, tex_command_by_rsgs, type, u, value;
    XNCR = require('./xncr');
    ISL = require('interskiplist');
    mkts_options = require('../../mingkwai-typesetter/options');
    rsg_registry = require('./character-sets-and-ranges');
    u = ISL["new"]();
    last_cid = 0x10ffff;
    is_cjk_rsg = function(rsg) {
      return indexOf.call(mkts_options['tex']['cjk-rsgs'], rsg) >= 0;
    };
    is_cjk_glyph = function(glyph) {
      return is_cjk_rsg(XNCR.as_rsg(glyph));
    };
    add_plane = function(isl, name, lo, hi) {
      name = "plane:" + name;
      return ISL.insert(isl, {
        name: name,
        lo: lo,
        hi: hi
      });
    };
    add_plane(u, 'Basic Multilingual Plane (BMP)', 0x0000, 0xffff);
    add_plane(u, 'Supplementary Multilingual Plane (SMP)', 0x10000, 0x1ffff);
    add_plane(u, 'Supplementary Ideographic Plane (SIP)', 0x20000, 0x2ffff);
    add_plane(u, 'Tertiary Ideographic Plane (TIP)', 0x30000, 0x3ffff);
    add_plane(u, 'Supplementary Special-purpose Plane (SSP)', 0xe0000, 0xefffd);
    add_plane(u, 'Private Use Area (PUA)', 0xf0000, 0xffffd);
    add_plane(u, 'Private Use Area (PUA)', 0x100000, 0x10fffd);
    tex_command_by_rsgs = mkts_options['tex']['tex-command-by-rsgs'];
    lo = 0x000000;
    hi = 0x10ffff;
    tex = tex_command_by_rsgs['fallback'];
    name = "style:fallback";
    ISL.insert(u, {
      name: name,
      lo: lo,
      hi: hi,
      tex: tex
    });
    intervals_by_rsg = {};
    ref = rsg_registry['names-and-ranges-by-csg'];
    for (csg in ref) {
      ranges = ref[csg];
      if (csg !== 'u' && csg !== 'jzr') {
        continue;
      }
      for (i = 0, len = ranges.length; i < len; i++) {
        range = ranges[i];
        name = range['range-name'];
        rsg = range['rsg'];
        lo = range['first-cid'];
        hi = range['last-cid'];
        is_cjk = is_cjk_rsg(rsg);
        tex = (ref1 = tex_command_by_rsgs[rsg]) != null ? ref1 : null;
        name = "block:" + name;
        if (tex != null) {
          ISL.insert(u, intervals_by_rsg[rsg] = {
            name: name,
            lo: lo,
            hi: hi,
            rsg: rsg,
            is_cjk: is_cjk,
            tex: tex
          });
        } else {
          ISL.insert(u, intervals_by_rsg[rsg] = {
            name: name,
            lo: lo,
            hi: hi,
            rsg: rsg,
            is_cjk: is_cjk
          });
        }
      }
    }
    ref2 = mkts_options['tex']['glyph-styles'];
    for (glyph in ref2) {
      style = ref2[glyph];
      glyph = XNCR.normalize_glyph(glyph);
      rsg = XNCR.as_rsg(glyph);
      cid = XNCR.as_cid(glyph);
      lo = hi = cid;
      cid_hex = hex(cid);
      name = "glyph-" + cid_hex;
      name = "style:" + name;
      ISL.insert(u, {
        name: name,
        lo: lo,
        hi: hi,
        rsg: rsg,
        style: style
      });
    }
    source = "# The Unicode Standard, V9.0.0, p49\n# Figure 2-14. Allocation on the BMP\n0000-00FF ASCII & Latin-1 Compatibility Area\n0100-058F General Scripts Area\n0590-08FF General Scripts Area (RTL)\n0900-1FFF General Scripts Area\n2000-2BFF Punctuation and Symbols Area\n2C00-2DFF General Scripts Area\n2E00-2E7F Supplemental Punctuation Area\n2E80-33FF CJK Miscellaneous Area\n3400-9FFF CJKV Unified Ideographs Area\nA000-ABFF General Scripts Area (Asia & Africa)\nAC00-D7FF Hangul Syllables Area\nD800-DFFF Surrogate Codes\nE000-F8FF Private Use Area (PUA)\nF900-FFFF Compatibility and Specials Area\n# The Unicode Standard, V9.0.0, p51\n# Figure 2-15. Allocation on Plane 1\n10000-107FF General Scripts Area\n10800-10FFF General Scripts Area (RTL)\n11000-11FFF General Scripts Area\n12000-15FFF Cuneiform & Hieroglyphic Area\n16000-16FFF General Scripts Area\n17000-1BBFF Ideographic Scripts Area\n1BC00-1CFFF General Scripts Area\n1D000-1E7FF Symbols Area\n1E800-1EFFF General Scripts Area (RTL)\n1F000-1FFFF Symbols Area";
    ref3 = source.split('\n');
    for (j = 0, len1 = ref3.length; j < len1; j++) {
      line = ref3[j];
      line = line.trim();
      if (line.startsWith('#')) {
        continue;
      }
      ref4 = line.match(/^([0-9a-fA-F]{4,5})-([0-9a-fA-F]{4,5}) (.+)$/), _ = ref4[0], lo = ref4[1], hi = ref4[2], name = ref4[3];
      lo = parseInt(lo, 16);
      hi = parseInt(hi, 16);
      name = "area:" + name;
      ISL.insert(u, {
        name: name,
        lo: lo,
        hi: hi
      });
    }
    ref5 = XNCR.chrs_from_text("helo äöü你好𢕒𡕴𡕨𠤇𫠠𧑴𨒡《》【】&jzr#xe100;🖹");
    for (k = 0, len2 = ref5.length; k < len2; k++) {
      glyph = ref5[k];
      cid = XNCR.as_cid(glyph);
      cid_hex = hex(cid);
      descriptions = ISL.find_entries_with_all_points(u, cid);
      urge(glyph, cid_hex);
      for (l = 0, len3 = descriptions.length; l < len3; l++) {
        description = descriptions[l];
        ref7 = ((ref6 = description['name']) != null ? ref6 : '???/').split(':'), type = ref7[0], _ = ref7[1];
        help((CND.grey(type + '/')) + (CND.steel('interval')) + ': ' + (CND.yellow((hex(description['lo'])) + "-" + (hex(description['hi'])))));
        for (key in description) {
          value = description[key];
          if (key === 'lo' || key === 'hi' || key === 'id') {
            continue;
          }
          help((CND.grey(type + '/')) + (CND.steel(key)) + ': ' + (CND.yellow(value)));
        }
      }
    }
    debug(ISL.aggregate(u, '《', {
      tex: 'list',
      style: 'list'
    }));
    cjk_rsgs = ['u-cjk', 'u-halfull', 'u-cjk-xa', 'u-cjk-xb', 'u-cjk-xc', 'u-cjk-xd', 'u-cjk-xe', 'u-cjk-cmpi1', 'u-cjk-cmpi2', 'u-cjk-rad1', 'u-cjk-rad2', 'u-cjk-sym', 'u-cjk-strk', 'u-cjk-kata', 'u-cjk-hira', 'u-hang-syl', 'u-cjk-enclett'];
    for (m = 0, len4 = cjk_rsgs.length; m < len4; m++) {
      rsg = cjk_rsgs[m];
      ref8 = intervals_by_rsg[rsg], lo = ref8.lo, hi = ref8.hi;
      debug((rpr(rsg)) + ": { lo: " + (hex(lo)) + ", hi: " + (hex(hi)) + ", name: " + rsg + ", }");
    }
    return null;
  };

  if (module.parent == null) {
    include = ['XXX'];
    this._main();
  }

}).call(this);

//# sourceMappingURL=tests.js.map
